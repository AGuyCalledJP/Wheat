
<InterpreterScreen>:
    name: 'interpreter'
    BoxLayout:
        orientation: 'vertical'
        InterpreterGui:
    
<HeightButton>:
    size_hint_y: None

<HomeScreenButton>:
    color: 1, 1, 1, 1

<InterpreterGui>:
    id: interpreter_gui
    output_window: output_window
    code_input: input
    scrollview: scrollview
    scatter: wheatblock
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1.
        Rectangle:
            pos: self.pos
            size: self.size
    FloatLayout:
        MyScatterLayout:
            parent_obj: interpreter_gui
            id: wheatblock
            pos: (0,0)
            NonDefocusingScrollView:
                root: wheatblock
                pos_hint: {'x': 0, 'y': .5}
                height: root.height/2, root.width
                id: scrollview
                bar_width: dp(10)
                InitiallyFullGridLayout: #output window
                    root: wheatblock
                    size_hint: None, None
                    height: root.height/2
                    width: root.width
                    pos_hint: 1, .5
                    cols: 1
                    id: output_window
                    filling_widget_minimum_height: 100
            FloatLayout:
                root: wheatblock
                size_hint_y: None
                height: root.height/2
                width: root.width
                InterpreterMenuButton:
                    root: wheatblock
                    text: 'E'
                    id: settings
                    size_hint: None, None
                    height: root.height/4
                    width: root.width - (root.width * .9)
                    pos: 0,0
                    background_normal: 0.3, 0.3, 0.3, 1
                    background_down: 0.1, 0.1, 0.1, 1
                    font_name: 'assets/fontello.ttf'
                    font_size: sp(34)
                    color: 1, 1, 1, 1
                Label:
                    id: status_label
                    size_hint: None, None
                    height: root.height/4
                    width: root.width - (root.width * .9)
                    pos: 0,root.height/4
                    markup: True
                    background_normal: 0.3, 0.3, 0.3, 1
                    text: '[b][color=#A2A2A2](Py {}.{})[/color]\nstatus:[/b]\n[b][color=#{}]{}[/color][/b]'.format(vinfo.major, vinfo.minor, root.status_label_colour, root.interpreter_state.replace('_', ' '))
                    color: 1, 1, 1, 1
                InterpreterInput:
                    id: input
                    root: root
                    size_hint: (.8,1)
                    #size: wheatblock.width * .8, 0
                    pos: wheatblock.width * .1, 1
                    disabled: root._lock_input
                    font_name: 'RobotoMono-Regular.ttf'
                NoTouchCarousel:
                    root: wheatblock
                    id: carousel
                    width: enter_button.texture_size[0] * 3
                    size_hint: None, None
                    height: root.height / 4
                    width: root.width - (root.width * .9)
                    pos: (root.width - (root.width * .1)), root.height/4
                    loop: True
                    NonDefocusingButton:
                        id: enter_button
                        text: 'N'
                        font_name: 'assets/fontello.ttf'
                        font_size: sp(20)
                        on_release: root.interpret_line_from_code_input()
                        background_normal: 0.3, 0.3, 0.3, 1
                        background_down: 0.1, 0.1, 0.1, 1
                        radius: 0
                        padding: 0
                NoTouchCarousel:
                    root: wheatblock
                    id: disable
                    size_hint: None, None
                    height: root.height / 8
                    width: (root.width - (root.width * .9)) / 2
                    pos: (root.width - (root.width * .1)), root.height / 8
                    loop: True
                    NonDefocusingButton:
                        id: dis
                        text: "M"
                        # font_name: 'assets/fontello.ttf'
                        font_size: sp(20)
                        on_release: input.disabled = True; enter_button.disabled = True; scrollview.disabled = True; status_label.disabled = True; settings.disabled = True
                        background_normal: 0.3, 0.3, 0.3, 1
                        background_down: 0.1, 0.1, 0.1, 1
                        radius: 0
                        padding: 0
                NoTouchCarousel:
                    root: wheatblock
                    id: enable
                    size_hint: None, None
                    height: root.height / 8
                    width: (root.width - (root.width * .9)) / 2
                    pos: (root.width - (root.width * .05)) , root.height / 8
                    loop: True
                    NonDefocusingButton:
                        id: en
                        text: "P"
                        # font_name: 'assets/fontello.ttf'
                        font_size: sp(20)
                        on_release: input.disabled = False; enter_button.disabled = False; scrollview.disabled = False; status_label.disabled = False; settings.disabled = False
                        background_normal: 0.3, 0.3, 0.3, 1
                        background_down: 0.1, 0.1, 0.1, 1
                        radius: 0
                        padding: 0
                NoTouchCarousel:
                    root: wheatblock
                    id: grow
                    size_hint: None, None
                    height: root.height / 8
                    width: (root.width - (root.width * .9)) / 2
                    pos: (root.width - (root.width * .1)), 0
                    loop: True
                    NonDefocusingButton:
                        id: dis
                        text: "G"
                        # font_name: 'assets/fontello.ttf'
                        font_size: sp(20)
                        on_release: root.size = root.size[0] + 16, root.size[1] + 12
                        background_normal: 0.3, 0.3, 0.3, 1
                        background_down: 0.1, 0.1, 0.1, 1
                        radius: 0
                        padding: 0
                NoTouchCarousel:
                    root: wheatblock
                    id: shrink
                    size_hint: None, None
                    height: root.height / 8
                    width: (root.width - (root.width * .9)) / 2
                    pos: (root.width - (root.width * .05)), 0
                    loop: True
                    NonDefocusingButton:
                        id: en
                        text: "S"
                        # font_name: 'assets/fontello.ttf'
                        font_size: sp(20)
                        on_release: root.size = root.size[0] - 16, root.size[1] - 12
                        background_normal: 0.3, 0.3, 0.3, 1
                        background_down: 0.1, 0.1, 0.1, 1
                        radius: 0
                        padding: 0

<NonDefocusingButton>:
    color: (1, 1, 1, 1)

<KeyboardButton>:
    color: (1, 1, 1, 1)
    padding: 0.025 * min(self.size)
    background_down: (0.2, 0.6431, 0.8078, 1.)
    background_normal: (0.6, 0.6, 0.6, 0.8)
    radius: dp(5)

<ColouredButton>:
    canvas.before:
        Color:
            rgba: self.background_normal if self.state == 'normal' else self.background_down
        RoundedRectangle:
            pos: self.x + self.padding, self.y + self.padding
            size: self.width - 2*self.padding, self.height - 2*self.padding
            radius: [(self.radius, self.radius) for _ in range(4)]

<ColouredButtonContainer>:
    canvas.before:
        Color:
            rgba: self.background_normal if self.state == 'normal' else self.background_down
        RoundedRectangle:
            pos: self.x + self.coloured_button_padding, self.y + self.coloured_button_padding
            size: self.width - 2*self.coloured_button_padding, self.height - 2*self.coloured_button_padding
            radius: [(self.radius, self.radius) for _ in range(4)]
    

# <MonoLabel@Label>:
#     font_name: 'RobotoMono-Regular.ttf'

<InputLabel>:
    size_hint_y: None
    height: self.texture_size[1] + dp(20)
    text_size: self.width, None
    font_name: 'RobotoMono-Regular.ttf'
    padding_x: dp(10)
    canvas.before:
        Color:
            rgba: 0.85 - self.blue_shift * 0.3, 0.85 - self.blue_shift * 0.3, 0.9 + self.blue_shift * 0.1, 0.95
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: 0, 0, 0, 1
        Line:
            rectangle: [self.x, self.y, self.width, self.height]
        Color:
            rgba: (0.65, 0.65, 0.95, 1)
        Rectangle:
            pos: self.pos
            size: dp(5), self.height

<OutputLabel>:
    size_hint_y: None
    height: self.texture_size[1] + dp(2)
    text_size: self.width, None
    font_name: 'RobotoMono-Regular.ttf'
    padding_x: dp(10)
    canvas.before:
        Color:
            rgba: 0.95, 0.95, 0.95, 0.95
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: (0.65, 0.95, 0.65, 1) if self.stream == 'stdout' else (0.95, 0.65, 0.65, 1)
        Rectangle:
            pos: self.pos
            size: dp(5), self.height

<UserMessageLabel>:
    size_hint_y: None
    height: self.texture_size[1] + dp(2)
    text_size: self.width, None
    font_name: 'RobotoMono-Regular.ttf'
    padding_x: dp(10)
    canvas.before:
        Color:
            rgba: 0.976, 0.9, 0.776, 1.
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: self.background_colour
        Rectangle:
            pos: self.pos
            size: dp(5), self.height

<DocLabel>:
    size_hint_y: None
    height: self.texture_size[1] + dp(2)
    text_size: self.width, None
    font_name: 'RobotoMono-Regular.ttf'
    padding_x: dp(10)
    opacity: max(0, 2*(self.double_opacity - 0.5))
    markup: True
    canvas.before:
        Color:
            rgba: 1., 0.95, 0.678, 1.
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: self.background_colour
        Rectangle:
            pos: self.pos
            size: dp(5), self.height
        Color:
            rgba: 0.3, 0.3, 0.3, 1
        Rectangle:
            pos: self.pos
            size: self.width, 1
                
    KeyboardButton:
        size: dp(40), min(dp(40), root.height)
        text_size: self.size
        valign: 'middle'
        halign: 'center'
        text: 'c'
        font_name: 'assets/fontello.ttf'
        background_normal: 0.4, 0.4, 0.4, 0.4
        pos: root.right - self.width - dp(10), root.top - self.height
        # on_press: root.parent.remove_widget(root)
        on_press: root.remove()
        
                

<NotificationLabel>:
    size_hint_y: None
    height: self.texture_size[1] + dp(8)
    markup: True
    color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_colour
        Rectangle:
            pos: self.pos
            size: self.size
        

<BreakMarker>:
    size_hint_y: None
    height: dp(2)
    canvas:
        Color:
            rgba: 0.3, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size

<RestartPopup>:
    size_hint_x: None
    size_hint_y: None
    width: min(0.8*Window.width, dp(350))
    vertical_padding: dp(20)
    height: gridlayout.height
    GridLayout:
        id: gridlayout
        height: self.minimum_height
        cols: 1
        Widget:
            size_hint_y: None
            height: root.vertical_padding
        Label:
            text: 'Are you sure you want to restart the interpreter? Your variable context will be lost.'
            text_size: self.width, None
            halign: 'center'
            color: 1, 1, 1, 1
            size_hint_y: None
            height: self.texture_size[1]
            padding_x: dp(20)
            padding_y: dp(20)
        Widget:
            size_hint_y: None
            height: root.vertical_padding
        BoxLayout:
            size_hint_y: None
            height: dp(40)
            Widget:
                size_hint_x: 0.2
            Button:
                text: 'cancel'
                color: 1, 1, 1, 1
                on_release: root.dismiss()
                background_color: 1, 0, 0, 1
            Widget:
                size_hint_x: 0.2
            Button:
                text: 'restart'
                color: 1, 1, 1, 1
                on_release: root.interpreter_gui.restart_interpreter(); root.dismiss()
                background_color: 0, 0.8, 0, 1
            Widget:
                size_hint_x: 0.2
        Widget:
            size_hint_y: None
            height: root.vertical_padding

<InitiallyFullGridLayout>:
    Widget:
        size_hint_y: None
        height: root.filling_widget_height

# <-InterpreterInput>:
#     canvas.before:
#         Color:
#             rgba: self.background_color
#         BorderImage:
#             border: self.border
#             pos: self.pos
#             size: self.size
#             source: self.background_disabled_normal if self.disabled else (self.background_active if self.focus else self.background_normal)
#             # source: self.background_active if self.focus else (self.background_disabled_normal if self.disabled else self.background_normal)
#         Color:
#             rgba: (self.cursor_color if (self.focus and not self.disabled and not self.cursor_blink) else (0, 0, 0, 0))
#         Rectangle:
#             pos: 200,200
#             size: 100,100
#         Color:
#             rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text else self.foreground_color)

<InputPopup>:
    size_hint_y: None
    size_hint_x: 0.9
    height: gl.height + dp(70)
    title: 'Insert text:'
    pos_hint: {'center_y': 0.3}
    AnchorLayout:
        id: al
        GridLayout:
            id: gl
            cols: 1
            size_hint_y: None
            height: self.minimum_height
            orientation: 'vertical'
            size_hint_x: None
            width: al.width - dp(30)
            Label:
                text: root.prompt
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1] + dp(10)
                color: 1, 1, 1, 1
            BoxLayout:
                size_hint_y: None
                height: sp(30)
                TextInput:
                    id: ti
                    multiline: False
                    on_text_validate: root.submit_text(self.text)
                    focus: True
                ColouredButton:
                    text: 'N'
                    font_name: 'assets/fontello.ttf'
                    font_size: sp(20)
                    on_release: root.submit_text(ti.text)
                    size_hint_x: None
                    color: (1, 1, 1, 1)
                    width: self.height
                    background_normal: 0.3, 0.3, 0.3, 1
                    background_down: 0.1, 0.1, 0.1, 1
                    radius: 0
                    padding: 0

<InterpreterMenuDropDown>:
    DropDownButton:
        text: 'clear output'
        size_hint_y: None
        height: dp(40)
        text_size: self.size
        padding_x: dp(10)
        valign: 'middle'
        on_release: root.parent_obj.root.parent_obj.clear_output(); root.dismiss(immediate=False)
    Widget:
        size_hint_y: None
        height: dp(2)
    DropDownButton:
        text: 'restart interpreter'
        padding_x: dp(10)
        size_hint_y: None
        height: dp(40)
        text_size: self.size
        valign: 'middle'
        on_release: root.parent_obj.root.parent_obj.query_restart(); root.dismiss(immediate=False)
    Widget:
        size_hint_y: None
        height: dp(2)
    DropDownButton:
        text: 'exec file'
        size_hint_y: None
        height: dp(40)
        text_size: self.size
        padding_x: dp(10)
        valign: 'middle'
        on_release: root.parent_obj.root.parent_obj.exec_file(); root.dismiss(immediate=False)
    Widget:
        size_hint_y: None
        height: dp(2)
    # DropDownButton:
    #     text: 'settings'
    #     size_hint_y: None
    #     height: dp(40)
    #     text_size: self.size
    #     padding_x: dp(10)
    #     valign: 'middle'
    #     on_release: app.manager.switch_to('settings'); root.dismiss(immediate=True)